<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    .chart-container {
        display: flex;
        flex-direction: column;
        /* Stack the charts vertically */
        align-items: center;
        /* Center the charts horizontally */
        gap: 10px;
        /* Adds some space between the charts */
    }

    .chart-container canvas {
        width: 200px;
        /* Smaller width */
        height: 150px;
        /* Smaller height */
    }
</style>

<div id="myCarousel" class="carousel slide">
    <div class="carousel-inner">
        <div class="carousel-item active" data-ticker="MANU">
            <div style="height: 200px; background-color: #0d0c0c;">AAPL</div>
        </div>
        <div class="carousel-item" data-ticker="MSGS">
            <div style="height: 200px; background-color: #aaa;">GOOGL</div>
        </div>
        <div class="carousel-item" data-ticker="MTN">
            <div style="height: 200px; background-color: #777;">MSFT</div>
        </div>
        <div class="carousel-item" data-ticker="WWE">
            <div style="height: 200px; background-color: #555;">AMZN</div>
        </div>
    </div>
    <a class="carousel-control-prev" href="#myCarousel" role="button" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </a>
    <a class="carousel-control-next" href="#myCarousel" role="button" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </a>
</div>
<div class="chart-container" style="background-color: #0d0c0c;">
    <canvas id="stockChart" width="300" height="150"></canvas>
    <canvas id="stockChart2" width="300" height="150"></canvas>
    <canvas id="stockChart3" width="300" height="150"></canvas>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const carousel = document.getElementById('myCarousel');
        const stockChartCtx = document.getElementById('stockChart').getContext('2d');
        const stockChartCtx2 = document.getElementById('stockChart2').getContext('2d');
        const stockChartCtx3 = document.getElementById('stockChart3').getContext('2d');
        let stockChart;
        let stockChart2;
        let stockChart3;
        let currentTicker = null;

        // Pause the carousel auto scroll
        const carouselInstance = new bootstrap.Carousel(carousel, {
            interval: false
        });

        async function updateChart(ticker) {
            if (ticker === currentTicker) return; // Check if the ticker is the same
            currentTicker = ticker; // Update current ticker

            try {
                const response = await fetch(`/stocks/api?ticker=${ticker}&start_date=2021-11-11&end_date=2023-12-12`);
                if (!response.ok) {
                    throw new Error(`Server error: ${response.status} ${response.statusText}`);
                }
                const newData = await response.json();
                const labels = newData.timestamps;
                const data = newData.closePrices;
                const v = newData.tradingVolume;
                const o = newData.openPrice;
                const stockprice = 'Stock-Price';
                const maxPrice = 'Trading-Volume';
                const volumePrice = 'Stock Open Price';

                if (stockChart && stockChart2 && stockChart3) {
                    stockChart.destroy();
                    stockChart2.destroy();
                    stockChart3.destroy();
                }

                stockChart = createChart(ticker, labels, data, stockChartCtx, stockprice);
                stockChart2 = createChart(ticker, labels, v, stockChartCtx2, maxPrice);
                stockChart3 = createChart(ticker, labels, o, stockChartCtx3, volumePrice);
            } catch (error) {
                console.error('Error fetching stock data:', error);
            }
        }

        carousel.addEventListener('slid.bs.carousel', function () {
            const activeItem = carousel.querySelector('.carousel-item.active');
            const ticker = activeItem.getAttribute('data-ticker');
            updateChart(ticker);
        });

        const activeItem = carousel.querySelector('.carousel-item.active');
        const initialTicker = activeItem.getAttribute('data-ticker');
        updateChart(initialTicker);

        function createChart(ticker, labels, data, ctx, title) {
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `${ticker} ${title}`,
                        data: data,
                        fill: false,
                        borderColor: 'green',
                        tension: 0.1
                    }]
                }
            });
        }
    });
</script>