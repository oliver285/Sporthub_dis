<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    .chart-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .chart-container canvas {
        width: 300px;
        height: 150px;
    }
</style>

<div id="stock-request-form" class="container" style="background-color: #0d0c0c;">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="text-center">
                <form id="stockRequestForm">
                    <img class="mt-5 mb-3 rounded" src="../../resources/img/Sport-Hub.png" alt="Sportshub Logo">
                    <h1>Stock Request</h1>
                    <div class="form-group">
                        <label for="ticker">Stock</label><br>
                        <input type="text" id="ticker" name="ticker" required><br>
                    </div>
                    <div class="form-group mt-3">
                        <label for="start-date">Start Date</label><br>
                        <input type="date" id="start-date" name="start_date" required><br>
                    </div>
                    <div class="form-group mt-3">
                        <label for="end-date">End Date</label><br>
                        <input type="date" id="end-date" name="end_date" required><br>
                    </div>
                    <div class="d-grid">
                        <button class="btn btn-primary mt-3" type="submit">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5 chart-container" style="background-color: #0d0c0c;">
    <canvas id="formStockChart"></canvas>
    <canvas id="formStockChart2"></canvas>
    <canvas id="formStockChart3"></canvas>
</div>

<h2>Want to buy shares of <span id="tickerName"></span>? FOLLOW <a href="/stockPurchase">LINK</a></h2>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.getElementById('stockRequestForm').addEventListener('submit', async function(event) {
        event.preventDefault();

        const ticker = document.getElementById('ticker').value;
        const startDate = document.getElementById('start-date').value;
        const endDate = document.getElementById('end-date').value;
        const stockChartCtx = document.getElementById('formStockChart').getContext('2d');
        const stockChartCtx2 = document.getElementById('formStockChart2').getContext('2d');
        const stockChartCtx3 = document.getElementById('formStockChart3').getContext('2d');
        let formStockChart;
         let formStockChart2;
          let formStockChart3;

        document.getElementById('tickerName').textContent = ticker;

        if (!ticker || !startDate || !endDate) {
            console.error('Missing required fields');
            return;
        }

        async function updateChart(ticker, startDate, endDate) {
            try {
                const response = await fetch(`/stocks/api?ticker=${ticker}&start_date=${startDate}&end_date=${endDate}`);
                if (!response.ok) {
                    throw new Error(`Server error: ${response.status} ${response.statusText}`);
                }
                const newData = await response.json();
                const labels = newData.timestamps;
                const data = newData.closePrices;
                const v = newData.tradingVolume;
                 const o = newData.openPrice;
                const stockprice = 'Stock-Price';
                const maxPrice = 'Trading-Volume';
                const volumePrice = 'Stock Open Price';

                if (formStockChart && formStockChart2 && formStockChart3) {
                    formStockChart.destroy();
                    formStockChart2.destroy();
                    formStockChart3.destroy();
                }

                formStockChart = createChart(ticker, labels, data, stockChartCtx, stockprice);
                formStockChart2 = createChart(ticker, labels, v, stockChartCtx2, maxPrice);
                formStockChart3 = createChart(ticker, labels, o, stockChartCtx3, volumePrice);
            } catch (error) {
                console.error('Error fetching stock data:', error);
            }
        }

        updateChart(ticker, startDate, endDate);

        function createChart(ticker, labels, data, ctx, title) {
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: `${ticker} ${title}`,
                        data: data,
                        fill: false,
                        borderColor: 'red',
                        tension: 0.1
                    }]
                }
            });
        }
    });
</script>
